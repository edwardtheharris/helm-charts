name: Release Charts
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          check-latest: true
      - name: Set up chart-testing
        uses: helm/chart-testing-action@main
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}
      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.10.0
      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          helm repo add csi-driver-lvm https://helm.metal-stack.io
          helm repo add csi-driver-nfs https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts
          helm dep up charts/storage-classes
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@main
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          pages_branch: main
